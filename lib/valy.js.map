{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap ee7b54bc3dc8565f6a68","webpack:///./src/valy.js","webpack:///./src/polyfills.js","webpack:///./src/valy.core.js","webpack:///./src/valy.ui.js"],"names":["INPUT_TYPE_EVENT_INPUT","Valy","formElement","settings","init","setAttribute","bind","addEventListener","handleSubmit","event","collectFormElements","forEach","element","includes","type","toLowerCase","handleElementChange","validateForm","valid","preventDefault","validateElement","target","getRadioSiblings","errors","map","validation","filter","item","length","setFormValid","setFormInvalid","validationType","determineValidationType","validationRules","getValidationRules","validateFile","validateCheckbox","validateRadio","validateSelect","validateField","console","error","name","setElementValid","setElementInvalid","Element","prototype","closest","selector","all","Array","from","document","querySelectorAll","current","parentNode","remove","removeChild","INPUT_TYPE_FIELD","EXCLUDED_ELEMENT_NAMES","EXCLUDED_INPUT_TYPES","EMAIL_REGEX","rulesAttribute","Core","input","RegExp","match","form","elementName","nodeName","elementType","elements","escapedRegexes","getAttribute","replace","push","split","rule","key","options","option","isNaN","Number","getRegExpFromString","index","rules","required","pattern","getCustomValidationRules","value","checked","siblings","hasCheckedSibling","selectedCount","selected","test","querySelector","classHolderAttribute","messageContainerAttribute","errorByTypeAttribute","elementInvalidClass","elementValidClass","errorMessageClass","formElementInvalidClass","formElementValidClass","UI","messageContainerSelector","messageContainer","errorType","classHolder","getHTMLClassHolder","setCustomValidity","classList","add","clearElementErrorMessages","join","setElementErrorMessages","formErrors","setFormErrorMessages","messageContainerElement","getMessageContainer","messagesFragment","createDocumentFragment","Set","errorText","getErrorMessageByType","errorElement","createElement","textContent","appendChild","formError"],"mappings":"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","file":"valy.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Valy\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Valy\"] = factory();\n\telse\n\t\troot[\"Valy\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap ee7b54bc3dc8565f6a68\n **/","'use strict';\n\nimport './polyfills';\nimport Core from './valy.core';\nimport UI from './valy.ui';\n\n/**\n * Constants\n */\nconst INPUT_TYPE_EVENT_INPUT = [\n  'text',\n  'password',\n  'color',\n  'date',\n  'datetime',\n  'datetime',\n  'email',\n  'month',\n  'number',\n  'range',\n  'search',\n  'tel',\n  'time',\n  'url',\n  'week'\n];\n\n/**\n * Plugion class\n * Provides API to the user.\n */\nexport default class Valy {\n\n  /**\n   * Plugin class constructor\n   * @param  {element} formElement\n   * @param  {Object} settings    Config object\n   */\n  constructor(formElement, settings = {}) {\n    // Prevent initialisation if there is no element present.\n    if (!formElement) {\n      return;\n    }\n\n    this.formElement = formElement;\n\n    this.settings = settings;\n\n    this.init();\n  }\n\n  /**\n   * Class initialize method\n   */\n  init() {\n    // Stop the browser default validation\n    this.formElement.setAttribute('novalidate', true);\n\n    this.bind();\n  }\n\n  /**\n   * Class event bind method\n   */\n  bind() {\n    this.formElement.addEventListener('submit', event => this.handleSubmit(event));\n\n    Core.collectFormElements(this.formElement).forEach((element) => {\n      element.addEventListener(\n        (INPUT_TYPE_EVENT_INPUT.includes(element.type.toLowerCase()) ? 'input' : 'change'),\n        event => this.handleElementChange(event)\n      );\n    });\n  }\n\n  /**\n   * Handles submit event - validates form and prevents form submission if there are errors.\n   */\n  handleSubmit(event) {\n    if (!Valy.validateForm(this.formElement).valid) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * Handles element change - live validate elements.\n   */\n  handleElementChange(event) {\n    Valy.validateElement(event.target);\n\n    // Validate radio siblings, or they may have error set from previous validations.\n    if (event.target.type.toLowerCase() === 'radio') {\n      Core.getRadioSiblings(event.target).forEach(element => {\n        if (element !== event.target) Valy.validateElement(element);\n      });\n    }\n  }\n\n  /**\n   * Validates form\n   * @param  {Element} formElement\n   * @return {Object}             Form valid state and form errors\n   */\n  static validateForm(formElement) {\n\n    // Collect form elements\n    const errors = Core.collectFormElements(formElement)\n\n      // Validate each element\n      .map(element => {\n        return {\n          element: element,\n          validation: Valy.validateElement(element)\n        };\n      })\n\n      // Filter only errors\n      .filter(item => item.validation.errors.length);\n\n    const valid = !errors.length;\n\n    if (valid) {\n      Valy.setFormValid(formElement);\n    } else {\n      Valy.setFormInvalid(formElement, errors);\n    }\n\n    return {valid, errors};\n  }\n\n  /**\n   * Validates element\n   * @param  {Element} element\n   * @return {Object}         Element valid state and errors\n   */\n  static validateElement(element) {\n    const validationType = Core.determineValidationType(element);\n    const validationRules = Core.getValidationRules(element);\n    let validation = {\n      valid: true,\n      errors: []\n    };\n\n    switch (validationType) {\n      case 'file':\n        validation = Core.validateFile(element, validationRules);\n        break;\n\n      case 'checkbox':\n        validation = Core.validateCheckbox(element, validationRules);\n        break;\n\n      case 'radio':\n        validation = Core.validateRadio(element, validationRules);\n        break;\n\n      case 'select':\n        validation = Core.validateSelect(element, validationRules);\n        break;\n\n      case 'field':\n        validation = Core.validateField(element, validationRules);\n        break;\n\n      default:\n        console.error(`ValyJS: Can't validate \"${element.name || element.type}\" element!`);\n    }\n\n    if (validation.valid) {\n      Valy.setElementValid(element);\n    } else {\n      Valy.setElementInvalid(element, validation.errors);\n    }\n\n    return validation;\n  }\n\n  /**\n   * Sets element as valid\n   * @param {Element} element\n   */\n  static setElementValid(element) {\n    UI.setElementValid(element);\n  }\n\n  /**\n   * Sets element as invalid\n   * @param {Element} element\n   * @param {Array} errors  Array of errors\n   */\n  static setElementInvalid(element, errors) {\n    UI.setElementInvalid(element, errors);\n  }\n\n  /**\n   * Sets element as valid\n   * @param {Element} element\n   */\n  static setFormValid(element) {\n    UI.setFormValid(element);\n  }\n\n  /**\n   * Sets element as invalid\n   * @param {Element} element\n   * @param {Array} errors  Array of elements ad errors\n   */\n  static setFormInvalid(element, errors) {\n    UI.setFormInvalid(element, errors);\n  }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/valy.js\n **/","// Polyfills\n\n// Adds support for Element.closest() - Android 4.4, Edge, Safari 8, iOS Safari 8.4\nif (!('closest' in Element.prototype)) {\n  Element.prototype.closest = function (selector) {\n    let all = Array.from(document.querySelectorAll(selector));\n    let current = this;\n\n    while (current && !all.includes(current)) {\n      current = current.parentNode;\n    }\n\n    return current;\n  };\n}\n\n// Adds support for Element.remove() - IE 11, Android 4.3, Safari 6, iOS Safari 6.1\nif (!('remove' in Element.prototype)) {\n  Element.prototype.remove = function () {\n    if (this.parentNode) {\n      this.parentNode.removeChild(this);\n    }\n  };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/polyfills.js\n **/","'use strict';\n\n/**\n * Constants\n */\nconst INPUT_TYPE_FIELD = [\n  'text',\n  'password',\n  'color',\n  'date',\n  'datetime',\n  'datetime',\n  'email',\n  'month',\n  'number',\n  'range',\n  'search',\n  'tel',\n  'time',\n  'url',\n  'week',\n  'file'\n];\n\nconst EXCLUDED_ELEMENT_NAMES = [\n  'button',\n  'keygen',\n  'output'\n];\n\nconst EXCLUDED_INPUT_TYPES = [\n  'submit',\n  'reset',\n  'button',\n  'datetime-local'\n];\n\nconst EMAIL_REGEX = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n\nconst rulesAttribute = 'data-valy-rules';\n\n/**\n * Core class\n * Handles core methods.\n */\nexport default class Core {\n\n  /**\n   * Converts RegExp like string to RegExp object\n   * @param  {String} input\n   * @return {RegExp}\n   */\n  static getRegExpFromString(input) {\n    return new RegExp(input.match(/^\\/(.+)\\/(\\w*)$/)[1], input.match(/^\\/(.+)\\/(\\w*)$/)[2]);\n  }\n\n  /**\n   * Gets radio element siblings\n   * @param  {Element} element\n   * @return {Array}         Array of elements\n   */\n  static getRadioSiblings(element) {\n    return Array.from((element.form || document).querySelectorAll(`[name=\"${element.name}\"]`));\n  }\n\n  /**\n   * Determines the validation type of an element\n   * @param  {Element} element\n   * @return {String or null}         Validation type or null\n   */\n  static determineValidationType(element) {\n    const elementName = element.nodeName.toLowerCase();\n    const elementType = element.type.toLowerCase();\n\n    switch (true) {\n      case elementName === 'textarea':\n      case elementName === 'input' && INPUT_TYPE_FIELD.includes(elementType):\n        return 'field';\n\n      case elementName === 'input' && elementType === 'checkbox':\n        return 'checkbox';\n\n      case elementName === 'input' && elementType === 'radio':\n        return 'radio';\n\n      case elementName === 'select':\n        return 'select';\n\n      default:\n        return null;\n    }\n  }\n\n  /**\n   * Collects form elements\n   * @param  {Element} formElement\n   * @return {Array}             Array of elements\n   */\n  static collectFormElements(formElement) {\n    return Array.from(formElement.elements).filter(element => {\n      const elementName = element.nodeName.toLowerCase();\n      const elementType = element.type.toLowerCase();\n\n      return !(\n        EXCLUDED_ELEMENT_NAMES.includes(elementName) ||\n        elementName === 'input' &&\n        EXCLUDED_INPUT_TYPES.includes(elementType)\n      );\n    });\n  }\n\n  /**\n   * Gets custom validation rules\n   * @param  {Element} element\n   * @return {Array}         Array of validation rules\n   */\n  static getCustomValidationRules(element) {\n    const escapedRegexes = [];\n\n    return element.getAttribute(rulesAttribute)\n\n      // Exclude the escaped slashes from the string\n      .replace(/\\\\\\//g, '@@escapedRegexSlash@@')\n\n      // Exclude the regexes from the string\n      .replace(/\\/.*?\\/\\w+/g, match => {\n        escapedRegexes.push(match);\n\n        return `@@escapedRegex${(escapedRegexes.length - 1)}@@`;\n      })\n\n      // Split the rules into array\n      .split(/;\\s?/)\n        // Remove the empty rules\n        .filter(rule => !!rule)\n        .map(rule => {\n          const key = rule.split('(')[0];\n          const options = rule\n            // Remove the key\n            .replace(key, '')\n\n            // Remove the brackets\n            .replace(/\\(|\\)/g, '')\n\n            // Split the options into array\n            .split(/,\\s?/)\n\n            // Remove the empty options\n            .filter(option => option !== '')\n\n            // Add back the regexes or convert to number\n            .map(option => {\n              if (!isNaN(option)) {\n                return Number(option);\n              } else if (option.match(/@@escapedRegex(\\d+)@@/)) {\n                return Core.getRegExpFromString(option\n                  .replace(/@@escapedRegex(\\d+)@@/, (match, index) =>\n                    escapedRegexes[index - 0].replace(/@@escapedRegexSlash@@/g, '\\\\/')\n                  ));\n              }\n\n              return option;\n\n            });\n\n          return {key, options};\n        });\n  }\n\n  /**\n   * Gets validation rules\n   * @param  {Element} element\n   * @return {Array}         Array of validation rules\n   */\n  static getValidationRules(element) {\n    const rules = [];\n\n    if (element.required) {\n      rules.push({\n        key: 'required',\n        options: []\n      });\n    }\n\n    if (element.pattern) {\n      rules.push({\n        key: 'pattern',\n        options: new RegExp(element.pattern)\n      });\n    }\n\n    if (element.type && element.type === 'email') {\n      rules.push({\n        key: 'email'\n      });\n    }\n\n    if (element.getAttribute(rulesAttribute)) {\n      rules.push(...Core.getCustomValidationRules(element));\n    }\n\n    return rules;\n  }\n\n  /**\n   * Validates file\n   * @param  {Element} element\n   * @param  {Array} validationRules\n   * @return {Object}                 Element valid state and errors\n   */\n  static validateFile(element, validationRules) {\n    let valid = true;\n    const errors = [];\n\n    validationRules.forEach(rule => {\n\n      switch (rule.key) {\n        case 'required':\n          if (!element.value) {\n            valid = false;\n\n            errors.push('required');\n          }\n          break;\n      }\n    });\n\n    return {valid, errors};\n  }\n\n  /**\n   * Validates checkbox\n   * @param  {Element} element\n   * @param  {Array} validationRules\n   * @return {Object}                 Element valid state and errors\n   */\n  static validateCheckbox(element, validationRules) {\n    let valid = true;\n    const errors = [];\n\n    validationRules.forEach(rule => {\n\n      switch (rule.key) {\n        case 'required':\n          if (!element.checked) {\n            valid = false;\n\n            errors.push('required');\n          }\n          break;\n\n        case 'unchecked':\n          if (element.checked) {\n            valid = false;\n\n            errors.push('unchecked');\n          }\n          break;\n      }\n    });\n\n    return {valid, errors};\n  }\n\n  /**\n   * Validates radio\n   * @param  {Element} element\n   * @param  {Array} validationRules\n   * @return {Object}                 Element valid state and errors\n   */\n  static validateRadio(element, validationRules) {\n    let valid = true;\n    const errors = [];\n    const siblings = Core.getRadioSiblings(element);\n\n    validationRules.forEach(rule => {\n\n      switch (rule.key) {\n        case 'required':\n          let hasCheckedSibling = false;\n\n          siblings.forEach(element => {\n            if (element.checked) {\n              hasCheckedSibling = true;\n            }\n          });\n\n          if (!hasCheckedSibling) {\n            valid = false;\n\n            errors.push('required');\n          }\n          break;\n\n        case 'selected':\n          if (!element.checked) {\n            valid = false;\n\n            errors.push('selected');\n          }\n          break;\n\n        case 'unselected':\n          if (element.checked) {\n            valid = false;\n\n            errors.push('unselected');\n          }\n          break;\n      }\n    });\n\n    return {valid, errors};\n  }\n\n  /**\n   * Validates select\n   * @param  {Element} element\n   * @param  {Array} validationRules\n   * @return {Object}                 Element valid state and errors\n   */\n  static validateSelect(element, validationRules) {\n    let valid = true;\n    const errors = [];\n\n    validationRules.forEach(rule => {\n\n      switch (rule.key) {\n        case 'required':\n          if (element.value === '') {\n            valid = false;\n\n            errors.push('required');\n          }\n          break;\n\n        case 'exact':\n          if (element.value !== rule.options[0]) {\n            valid = false;\n\n            errors.push('exact');\n          }\n          break;\n\n        case 'selectedCount':\n          const selectedCount = Array.from(element.options).filter(option => option.selected).length;\n\n          if (selectedCount < rule.options[0] || selectedCount > rule.options[1]) {\n            valid = false;\n\n            errors.push('selectedCount');\n          }\n          break;\n      }\n    });\n\n    return {valid, errors};\n  }\n\n  /**\n   * Validates field\n   * @param  {Element} element\n   * @param  {Array} validationRules\n   * @return {Object}                 Element valid state and errors\n   */\n  static validateField(element, validationRules) {\n    let valid = true;\n    const value = element.value;\n    const errors = [];\n\n    validationRules.forEach(rule => {\n\n      switch (rule.key) {\n        case 'required':\n          if (value === '') {\n            valid = false;\n\n            errors.push('required');\n          }\n          break;\n\n        case 'pattern':\n          if (value !== '' && !rule.options[0].test(value)) {\n            valid = false;\n\n            errors.push('pattern');\n          }\n          break;\n\n        case 'email':\n          if (value !== '' && !value.match(EMAIL_REGEX)) {\n            valid = false;\n\n            errors.push('email');\n          }\n          break;\n\n        case 'presence':\n          if (value.length < (rule.options.length ? rule.options[0] : 1) || value.length > rule.options[1]) {\n            valid = false;\n\n            errors.push('presence');\n          }\n          break;\n\n        case 'exact':\n          if (value !== rule.options[0]) {\n            valid = false;\n\n            errors.push('exact');\n          }\n          break;\n\n        case 'number':\n          if (isNaN(value) || Number(value) < rule.options[0] || Number(value) > rule.options[1]) {\n            valid = false;\n\n            errors.push('number');\n          }\n          break;\n\n        case 'matchField':\n          if (document.querySelector(rule.options[0]) && value !== document.querySelector(rule.options[0]).value) {\n            valid = false;\n\n            errors.push('matchField');\n          }\n          break;\n      }\n    });\n\n    return {valid, errors};\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/valy.core.js\n **/","'use strict';\n\n/**\n * Constants\n */\nconst classHolderAttribute = 'data-valy-class-holder';\nconst messageContainerAttribute = 'data-valy-message-container';\nconst errorByTypeAttribute = 'data-valy-error-';\nconst elementInvalidClass = 'valy-invalid';\nconst elementValidClass = 'valy-valid';\nconst errorMessageClass = 'valy-error-message';\nconst formElementInvalidClass = 'valy-form-invalid';\nconst formElementValidClass = 'valy-form-valid';\n\n/**\n * UI Class\n * Handles DOM modifications\n */\nexport default class UI {\n\n  /**\n   * Gets error/valid class holder of element\n   * @param  {Element} element\n   * @return {Element}         Class holder\n   */\n  static getHTMLClassHolder(element) {\n    return element.closest(element.getAttribute(classHolderAttribute)) || element;\n  }\n\n  /**\n   * Gets message container for element messages\n   * @param  {Element} element\n   * @return {Element}         Message container\n   */\n  static getMessageContainer(element) {\n    const messageContainerSelector = element.getAttribute(messageContainerAttribute);\n    let messageContainer = null;\n    let current = element;\n\n    if (!messageContainerSelector) {\n      return null;\n    }\n\n    while (current && !messageContainer) {\n      messageContainer = current.querySelector(messageContainerSelector);\n      current = current.parentNode;\n    }\n\n    return messageContainer;\n  }\n\n  /**\n   * Gets error message for specific element by it's type\n   * @param  {Element} element\n   * @param  {String} errorType\n   * @return {String}           Error message\n   */\n  static getErrorMessageByType(element, errorType) {\n    return element.getAttribute(errorByTypeAttribute + errorType);\n  }\n\n  /**\n   * Sets element as valid\n   * @param {Element} element\n   */\n  static setElementValid(element) {\n\n    const classHolder = UI.getHTMLClassHolder(element);\n\n    // Make element valid\n    element.setCustomValidity('');\n\n    // Add valid class to the class holder\n    classHolder.classList.add(elementValidClass);\n\n    // Remove invalid class from the class holder\n    classHolder.classList.remove(elementInvalidClass);\n\n    UI.clearElementErrorMessages(element);\n  }\n\n  /**\n   * Sets element as invalid\n   * @param {Element} element\n   * @param {Array} errors  Array of errors\n   */\n  static setElementInvalid(element, errors) {\n\n    const classHolder = UI.getHTMLClassHolder(element);\n\n    // Make element invalid\n    element.setCustomValidity(errors.join(', '));\n\n    // Add invalid class to the class holder\n    classHolder.classList.add(elementInvalidClass);\n\n    // Remove valid class from the class holder\n    classHolder.classList.remove(elementValidClass);\n\n    UI.setElementErrorMessages(element, errors);\n  }\n\n  /**\n   * Sets form as valid\n   * @param {Element} element\n   */\n  static setFormValid(element) {\n\n    // Add valid class to the element\n    element.classList.add(formElementValidClass);\n\n    // Remove invalid class from the element\n    element.classList.remove(formElementInvalidClass);\n\n    UI.clearElementErrorMessages(element);\n  }\n\n  /**\n   * Sets form as invalid\n   * @param {Element} element\n   * @param {Array} formErrors Array of elements and errors\n   */\n  static setFormInvalid(element, formErrors) {\n\n    // Add error class to the element\n    element.classList.add(formElementInvalidClass);\n\n    // Remove valid class from the element\n    element.classList.remove(formElementValidClass);\n\n    UI.setFormErrorMessages(element, formErrors);\n  }\n\n  /**\n   * Clears element error messages\n   * @param  {Element} element\n   */\n  static clearElementErrorMessages(element) {\n    const messageContainerElement = UI.getMessageContainer(element);\n\n    // Clear messages\n    if (messageContainerElement) {\n      messageContainerElement\n        .querySelectorAll(`.${errorMessageClass}`)\n        .forEach(element => element.remove());\n    }\n  }\n\n  /**\n   * Sets element error messages\n   * @param {Element} element\n   * @param {Array} errors  Array of errors\n   */\n  static setElementErrorMessages(element, errors) {\n    const messageContainerElement = UI.getMessageContainer(element);\n\n    // Set messages\n    if (messageContainerElement) {\n      const messagesFragment = document.createDocumentFragment();\n\n      // Remove duplicates\n      [...new Set(errors)]\n        .forEach(error => {\n          const errorText = UI.getErrorMessageByType(element, error);\n\n          if (errorText) {\n            const errorElement = document.createElement('span');\n\n            errorElement.textContent = errorText;\n\n            errorElement.classList.add(errorMessageClass);\n\n            messagesFragment.appendChild(errorElement);\n          }\n        });\n\n      UI.clearElementErrorMessages(element);\n\n      messageContainerElement.appendChild(messagesFragment);\n    }\n\n  }\n\n  /**\n   * Sets form element error messages\n   * @param {Element} formElement\n   * @param {Array} formErrors  Array of elements and errors\n   */\n  static setFormErrorMessages(formElement, formErrors) {\n    const messageContainerElement = UI.getMessageContainer(formElement);\n\n    // Set messages\n    if (messageContainerElement) {\n      const messagesFragment = document.createDocumentFragment();\n\n      formErrors.forEach(formError => {\n\n        // Remove duplicates\n        [...new Set(formError.validation.errors)]\n          .forEach(error => {\n            const errorText = UI.getErrorMessageByType(formError.element, error);\n\n            if (errorText) {\n              const errorElement = document.createElement('span');\n\n              errorElement.textContent = errorText;\n\n              errorElement.classList.add(errorMessageClass);\n\n              messagesFragment.appendChild(errorElement);\n            }\n          });\n      });\n\n      UI.clearElementErrorMessages(formElement);\n\n      messageContainerElement.appendChild(messagesFragment);\n    }\n  }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/valy.ui.js\n **/"],"sourceRoot":""}